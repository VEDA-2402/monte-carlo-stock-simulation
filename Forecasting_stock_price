import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt


# 1. Download 3 years of Reliance data (auto_adjust=False optional now)

ticker = "RELIANCE.NS"
data = yf.download(ticker, period="3y", auto_adjust=False, progress=False)

if data.empty:
    raise ValueError("Data download failed. Check ticker or internet.")

closing_prices = data["Close"]

print("\nLast 5 rows of price data:")
print(closing_prices.tail(), "\n")

last_price = closing_prices.iloc[-1].item()


# 2. Calculate daily log returns

log_returns = np.log(closing_prices / closing_prices.shift(1)).dropna()
mu = log_returns.mean().item()
sigma = log_returns.std().item()

print(f"mu (daily drift) = {mu:.6f}")
print(f"sigma (daily volatility) = {sigma:.6f}")
print(f"Last available price = ₹{last_price:,.2f}")


# 3. Simulation setup

np.random.seed(42)
num_simulations = 1000
num_days = 252

simulations = np.zeros((num_days, num_simulations))
drift = mu - 0.5 * sigma**2


# 4. Run simulations

for sim in range(num_simulations):
    prices = [last_price]
    for _ in range(1, num_days):
        shock = sigma * np.random.normal()
        price = prices[-1] * np.exp(drift + shock)
        prices.append(price)
    simulations[:, sim] = prices


# 5. Plot price paths

plt.figure(figsize=(12, 6))
plt.plot(simulations, linewidth=0.6, alpha=0.6)
plt.title(f"{ticker} – Monte Carlo Simulation ({num_simulations} paths, 1 year)")
plt.xlabel("Days")
plt.ylabel("Simulated Price (₹)")
plt.grid(True)
plt.tight_layout()
plt.show()


# 6. Histogram and percentiles

end_prices = simulations[-1]

plt.figure(figsize=(10, 5))
plt.hist(end_prices, bins=50, color="skyblue", edgecolor="black")
plt.title("Distribution of Ending Prices After 1 Year")
plt.xlabel("Price (₹)")
plt.ylabel("Frequency")
plt.grid(True)
plt.tight_layout()
plt.show()

p5, p95 = np.percentile(end_prices, [5, 95])
print(f"5th percentile (bear case): ₹{p5:,.2f}")
print(f"95th percentile (bull case): ₹{p95:,.2f}")










